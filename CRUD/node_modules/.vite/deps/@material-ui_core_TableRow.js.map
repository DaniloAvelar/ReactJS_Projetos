{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/TableRow/TableRow.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\r\nimport { alpha } from '../styles/colorManipulator';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      color: 'inherit',\r\n      display: 'table-row',\r\n      verticalAlign: 'middle',\r\n      // We disable the focus ring for mouse, touch and keyboard users.\r\n      outline: 0,\r\n      '&$hover:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n      },\r\n      '&$selected, &$selected:hover': {\r\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\r\n      }\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if `selected={true}`. */\r\n    selected: {},\r\n\r\n    /* Pseudo-class applied to the root element if `hover={true}`. */\r\n    hover: {},\r\n\r\n    /* Styles applied to the root element if table variant=\"head\". */\r\n    head: {},\r\n\r\n    /* Styles applied to the root element if table variant=\"footer\". */\r\n    footer: {}\r\n  };\r\n};\r\nvar defaultComponent = 'tr';\r\n/**\r\n * Will automatically set dynamic row height\r\n * based on the material table element parent (head, body, etc).\r\n */\r\n\r\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\r\n      _props$hover = props.hover,\r\n      hover = _props$hover === void 0 ? false : _props$hover,\r\n      _props$selected = props.selected,\r\n      selected = _props$selected === void 0 ? false : _props$selected,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\r\n\r\n  var tablelvl2 = React.useContext(Tablelvl2Context);\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    ref: ref,\r\n    className: clsx(classes.root, className, tablelvl2 && {\r\n      'head': classes.head,\r\n      'footer': classes.footer\r\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\r\n    role: Component === defaultComponent ? null : 'row'\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\r\n  /**\r\n   * Should be valid <tr> children such as `TableCell`.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * If `true`, the table row will shade on hover.\r\n   */\r\n  hover: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the table row will have the selected shading.\r\n   */\r\n  selected: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTableRow'\r\n})(TableRow);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AAEA;AACO,IAAI,SAAS,SAASA,QAAO,OAAO;AACzC,SAAO;AAAA;AAAA,IAEL,MAAM;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,eAAe;AAAA;AAAA,MAEf,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,iBAAiB,MAAM,QAAQ,OAAO;AAAA,MACxC;AAAA,MACA,gCAAgC;AAAA,QAC9B,iBAAiB,MAAM,MAAM,QAAQ,UAAU,MAAM,MAAM,QAAQ,OAAO,eAAe;AAAA,MAC3F;AAAA,IACF;AAAA;AAAA,IAGA,UAAU,CAAC;AAAA;AAAA,IAGX,OAAO,CAAC;AAAA;AAAA,IAGR,MAAM,CAAC;AAAA;AAAA,IAGP,QAAQ,CAAC;AAAA,EACX;AACF;AACA,IAAI,mBAAmB;AAMvB,IAAI,WAA8B,iBAAW,SAASC,UAAS,OAAO,KAAK;AACzE,MAAI,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,mBAAmB,MAAM,WACzB,YAAY,qBAAqB,SAAS,mBAAmB,kBAC7D,eAAe,MAAM,OACrB,QAAQ,iBAAiB,SAAS,QAAQ,cAC1C,kBAAkB,MAAM,UACxB,WAAW,oBAAoB,SAAS,QAAQ,iBAChD,QAAQ,yBAAyB,OAAO,CAAC,WAAW,aAAa,aAAa,SAAS,UAAU,CAAC;AAEtG,MAAI,YAAkB,iBAAW,wBAAgB;AACjD,SAA0B,oBAAc,WAAW,SAAS;AAAA,IAC1D;AAAA,IACA,WAAW,eAAK,QAAQ,MAAM,WAAW,aAAa;AAAA,MACpD,QAAQ,QAAQ;AAAA,MAChB,UAAU,QAAQ;AAAA,IACpB,EAAE,UAAU,OAAO,GAAG,SAAS,QAAQ,OAAO,YAAY,QAAQ,QAAQ;AAAA,IAC1E,MAAM,cAAc,mBAAmB,OAAO;AAAA,EAChD,GAAG,KAAK,CAAC;AACX,CAAC;AACD,OAAwC,SAAS,YAAY;AAAA;AAAA;AAAA;AAAA,EAI3D,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,SAAS,kBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAK1B,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrB,WAAW,kBAAAA,QAEV;AAAA;AAAA;AAAA;AAAA,EAKD,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKjB,UAAU,kBAAAA,QAAU;AACtB,IAAI;AACJ,IAAO,mBAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AACR,CAAC,EAAE,QAAQ;",
  "names": ["styles", "TableRow", "PropTypes"]
}
